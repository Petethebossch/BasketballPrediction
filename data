import pandas as pd
import os
import chardet
import numpy as np
import glob

# Define the path where your CSV files are located
csv_path = "Data/*.csv"

# Get a list of all CSV file paths matching the pattern
csv_files = glob.glob(csv_path)

# Initialize an empty dictionary to store the DataFrames
dataframes = {}

# Read each CSV file into a DataFrame and store it in the dictionary
for file in csv_files:
    # Extract the file name without the extension as the dictionary key
    file_name = file.split(".",1)[0]
    file_name = file_name.split("\\",1)[1]
        # Read the CSV file into a DataFrame
    with open(file, 'rb') as f:
        result = chardet.detect(f.read())
    encoding = result['encoding']
    df = pd.read_csv(file,encoding=encoding)
        
        # Store the DataFrame in the dictionary
    dataframes[file_name] = df

# Access the individual DataFrames by their respective keys
print(dataframes)
datanames = list(dataframes.keys())
for x in range(0,len(dataframes.keys())):
    print(datanames[x])

maleGames = pd.DataFrame()
maleGames = pd.concat([dataframes["MRegularSeasonDetailedResults"],dataframes["MNCAATourneyDetailedResults"]], ignore_index=True)
pd.set_option('display.max_columns', 500)
maleGames["CityID"] = 0
for x in range(34074,len(maleGames)):
    print(x)
    done = 0
    currGame = maleGames.iloc[x]
    hi = len(dataframes["MGameCities"])
    lo = 0
    if(currGame["Season"]>2009):
        while(not done and hi != lo):
            mid = int((hi+lo)/2)
            if(currGame["Season"]>dataframes["MGameCities"].iloc[mid]["Season"]):
                lo = mid
            elif(currGame["Season"]<dataframes["MGameCities"].iloc[mid]["Season"]):
                hi = mid
            else:
                if(currGame["DayNum"]>dataframes["MGameCities"].iloc[mid]["DayNum"]):
                    lo = mid
                elif(currGame["DayNum"]<dataframes["MGameCities"].iloc[mid]["DayNum"]):
                    hi = mid
                else:
                    if(currGame["WTeamID"]>dataframes["MGameCities"].iloc[mid]["WTeamID"]):
                        lo = mid
                    elif(currGame["WTeamID"]<dataframes["MGameCities"].iloc[mid]["WTeamID"]):
                        hi = mid
                    else:
                        maleGames.loc[x, "CityID"] = dataframes["MGameCities"].iloc[mid]["CityID"]
                        done = 1


# Create a dictionary to store teams and their games
teams = {}

# Loop through maleGames DataFrame
for x in range(len(maleGames)):
    print(x)
    win_team = maleGames.iloc[x]["WTeamID"]
    lose_team = maleGames.iloc[x]["LTeamID"]
    
    # Add winning team to the dictionary if not already present
    if win_team not in teams:
        teams[win_team] = pd.DataFrame(columns=maleGames.columns)
    
    # Add losing team to the dictionary if not already present
    if lose_team not in teams:
        teams[lose_team] = pd.DataFrame(columns=maleGames.columns)
    
    # Append the game to the respective team's DataFrame
    teams[win_team] = pd.concat([teams[win_team], maleGames.iloc[[x]]], ignore_index=True)
    teams[lose_team] = pd.concat([teams[lose_team], maleGames.iloc[[x]]], ignore_index=True)
